// Copyright (c) Improbable Worlds Ltd, All Rights Reserved

#include "TestingFrameworkShutdownTest.h"

#include "SpatialFunctionalTestFlowController.h"
#include "SpatialGDKSettings.h"

/**
 * This test tests the shutdown of the spatial functional testing framework in a specific and uncommon error flow.
 * This test was added after the sequence trigger on a customer test and caused the framework to hang as this flow had not been kept up to date.
 * This is to ensure future regressions do not occur.
 *
 * The test includes 2 Server and 2 Clients.
 * - Test:
 *  - The test finishes on one server with an error and the test never finishing the test or the step on the other workers.
 * NOTE: C++ Test does not follow the same path as the blueprint and therefore this test does not expose the issue - See FTEST_11
 */
ATestingFrameworkShutdownTest::ATestingFrameworkShutdownTest()
	: Super()
{
	Author = "Victoria";
	Description = TEXT("Test the shutdown of the spatial functional testing framework in for a timeout error flow.");
}

void ATestingFrameworkShutdownTest::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const
{
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
}

void ATestingFrameworkShutdownTest::PrepareTest()
{
	Super::PrepareTest();

	//if (HasAuthority())
	//{
	//	// Expected errors generated by changing replicated properties on a non-auth server
	//	AddExpectedLogError(TEXT("Testing the failure case followed by timeout."));
	//}

	//AddStep(TEXT("ATestingFrameworkShutdownTest Forced Test Failure"), FWorkerDefinition::AllWorkers, nullptr, [this]() 
	AddStep(TEXT("TestingFrameworkShutdownTest Forced Test Failure"), FWorkerDefinition::AllWorkers, nullptr, nullptr, [this](float DeltaTime) 
		{


		const FWorkerDefinition& LocalWorkerDefinition = GetLocalFlowController()->WorkerDefinition;

		if (LocalWorkerDefinition.Type == ESpatialFunctionalTestWorkerType::Server && LocalWorkerDefinition.Id == 1)
		{
			FinishTest(EFunctionalTestResult::Failed,
					   FString::Printf(TEXT("Testing the failure case followed by timeout.")));
		}

		// Note we purposely do not finish the test or step on the other workers to trigger the timeout shutdown
	});

}


